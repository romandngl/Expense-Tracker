@page "/dashboard"
@using ExpensesTracker.Services
@using ExpensesTracker.Models
@inject DashboardService DashboardService
@inject NavigationManager NavigationManager

<div class="dashboard">
    <h2>Expense Tracker Dashboard</h2>

    <div class="summary">
        <div>Total Inflows: @DashboardData.TotalInflows</div>
        <div>Total Outflows: @DashboardData.TotalOutflows</div>
        <div>Total Debts: @DashboardData.TotalDebts</div>
        <div>Cleared Debts: @DashboardData.ClearedDebts</div>
        <div>Remaining Debts: @DashboardData.RemainingDebts</div>
    </div>

    <div class="charts">
        <h3>Transaction Summary</h3>
        <!-- Add your chart component here -->
    </div>

    <div class="pending-debts">
        <h3>Pending Debts</h3>
        <ul>
            @foreach (var debt in DashboardData.PendingDebts)
            {
                <li>@debt.Remarks - Due: @debt.DueDate.ToShortDateString() - Amount: @debt.Amount</li>
            }
        </ul>
    </div>
</div>

@code {
    private DashboardModel DashboardData { get; set; } = new DashboardModel();
    private string UserEmail { get; set; } = "ram@gmail.com";  // Placeholder email. Adjust as needed.

    protected override async Task OnInitializedAsync()
    {
        // Pass the email parameter to get the dashboard data
        DashboardData = await DashboardService.GetDashboardDataAsync(UserEmail);
    }
}
